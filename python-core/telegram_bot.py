# ~/ai_seller/project/python-core/telegram_bot.py

import os
import asyncio
import logging

from aiogram import Bot, Dispatcher
from dotenv import load_dotenv

from dialog.flow_manager import FlowManager
from llm.orchestrator import LLMOrchestrator
from dialog.state_machine import FSMFactory
from dialog.context import RedisSessionStore
from bot.handlers import register_handlers

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)
logger = logging.getLogger(__name__)

# –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379/0")
TENANT_ID = os.getenv("TENANT_ID", "default")

if not TELEGRAM_BOT_TOKEN:
    logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏!")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π FlowManager
orchestrator = LLMOrchestrator()
fsm_factory = FSMFactory()
session_store = RedisSessionStore(REDIS_URL)

flow_manager = FlowManager(
    orchestrator=orchestrator,
    fsm_factory=fsm_factory,
    tenant_id=TENANT_ID,
    session_store=session_store,
)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π flow_manager –∏ tenant_id
register_handlers(dp, flow_manager, TENANT_ID)


async def main():
    logger.info("üöÄ SoVAni Telegram bot –∑–∞–ø—É—â–µ–Ω.")
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
