package handlers

import (
    "encoding/json"
    "fmt"
    "log"
    "net/http"
)

// TelegramUpdate ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
type TelegramUpdate struct {
    Message struct {
        Text string `json:"text"`
        Chat struct {
            ID int64 `json:"id"`
        } `json:"chat"`
    } `json:"message"`
}

// TelegramHandler ‚Äî –±–∞–∑–æ–≤—ã–π HTTP-—Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è Telegram webhook
func TelegramHandler(w http.ResponseWriter, r *http.Request) {
    if r.Method != http.MethodPost {
        w.WriteHeader(http.StatusMethodNotAllowed)
        w.Write([]byte("–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"))
        return
    }

    var update TelegramUpdate
    if err := json.NewDecoder(r.Body).Decode(&update); err != nil {
        log.Printf("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ Telegram: %v", err)
        w.WriteHeader(http.StatusBadRequest)
        return
    }

    log.Printf("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram: %s", 
update.Message.Text)

    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –∑–∞–≥–ª—É—à–∫–æ–π
    fmt.Fprintf(w, "–ü—Ä–∏–Ω—è—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: %s", update.Message.Text)
}

